#include "services_dune.fcl"
#include "NuEScatterGen.fcl"
#include "largeantmodules_dune.fcl"
#include "detsimmodules_dune.fcl"
#include "singles_dune.fcl"

process_name: NueScatterGen

services:
{
  # Load the service that manages root files for histograms.
  TFileService: { fileName: "nuescatter_hist.root" }
  TimeTracker:       {}
  MemoryTracker:         { } # default is one
  RandomNumberGenerator: {} #ART native random number generator
  FileCatalogMetadata:  @local::art_file_catalog_mc
  @table::dunefd_simulation_services
}
services.OpDigiProperties:        @local::dunefd_opdigiproperties
services.PhotonVisibilityService.XMin: 0.0

#Start each new event with an empty event.
source:
{
  module_type: EmptyEvent
  timestampPlugin: { plugin_type: "GeneratedEventTimestamp" }
  maxEvents:   10          # Number of events to create
  firstRun:    1           # Run number to use for this file
  firstEvent:  1           # number of first event in the file
}

# Define and configure some modules to do work on each event.
# First modules are defined; they are scheduled later.
# Modules are grouped by type.
physics:
{

 producers:
 {
   generator: @local::standard_nuescattergen_solar
   largeant:  @local::dunefd_largeant
   daq:       @local::dunefd_simwire
   rns:       { module_type: "RandomNumberSaver" }
 }

 #define the producer and filter modules for this path, order matters,
 #filters reject all following items.  see lines starting physics.producers below
 #simulate: [ rns, generator ]
 simulate: [ rns, generator, largeant, daq ]

 #define the output stream, there could be more than one if using filters
 stream1:  [ out1 ]

 #trigger_paths is a keyword and contains the paths that modify the art::event,

 #ie filters and producers
 trigger_paths: [simulate]

 #end_paths is a keyword and contains the paths that do not modify the art::Event,
 #ie analyzers and output streams.  these all run simultaneously
 end_paths:     [stream1]
}

#block to define where the output goes.  if you defined a filter in the physics
#block and put it in the trigger_paths then you need to put a SelectEvents: {SelectEvents: [XXX]}
#entry in the output stream you want those to go to, where XXX is the label of the filter module(s)
outputs:
{
 out1:
 {
   module_type: RootOutput
   fileName:    "nuescatter_gen_dunefd.root"
   dataTier:    "generated"
   compressionLevel: 1
 }
}


services.Geometry: @local::dune10kt_1x2x6_geo

services.LArG4Parameters.UseCustomPhysics: true
services.LArG4Parameters.EnabledPhysics: [ "LowEnergyEm",
                                           "FastOptical",
                                           "SynchrotronAndGN",
                                           "Ion",
                                           "NeutronHP",
                                           "Decay",
                                           "HadronElastic",
                                           "Stopping" ]
services.LArG4Parameters.ParticleKineticEnergyCut: 1.0e-5 # GeV
services.LArG4Parameters.StoreTrajectories: true
services.LArG4Parameters.KeepEMShowerDaughters: true
