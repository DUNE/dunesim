# This @product_deps@ file defines dependencies for this package.

# The *parent* line must the first non-commented line and defines this product and version
# The version must be of the form vxx_yy_zz (e.g. v01_02_03).

parent dunetpc v08_35_00

defaultqual e17

# These optional lines define where headers, libraries, and executables go and should
# be used only if your product does not conform to the defaults.
# Format: directory_type directory_path directory_name
#   where directory_type is one of incdir, libdir, or bindir
#   where directory_path is one of product_dir, fq_dir and -
# Defaults:
# incdir  product_dir  include
# fcldir  product_dir  fcl
# libdir  fq_dir       lib
# bindir  fq_dir       bin
#
fcldir  product_dir job
gdmldir product_dir gdml
fwdir  product_dir config_data

# table fragment to set FW_SEARCH_PATH needed
# to find gdml files:
table_fragment_begin
    pathPrepend(FW_SEARCH_PATH, ${DUNETPC_DIR}/scripts)
    pathPrepend(FW_SEARCH_PATH, ${DUNETPC_DIR}/gdml)
    pathPrepend(FW_SEARCH_PATH, ${DUNE_PARDATA_DIR}/FieldResponse)
    # Add StashCache to the FW_SEARCH_PATH
    pathPrepend(FW_SEARCH_PATH, /cvmfs/dune.osgstorage.org/pnfs/fnal.gov/usr/dune/persistent/stash/)
    pathPrepend(FHICL_FILE_PATH, .:./job)
    # WireCellData
    envSet(WIRECELL_PATH, ${DUNE_PARDATA_DIR}/WireCellData)
    pathPrepend(WIRECELL_PATH, ${UPS_PROD_DIR}/wire-cell-cfg)
#    envSet(DBIWSPWDFILE, /dune/experts/path/to/proddbpwd/for/writes)
#    envSet(DBIWSURL, http://dbdata0vm.fnal.gov:8116/LBNE35tCon/app/)
#    envSet(DBIWSURLINT, http://dbdata0vm.fnal.gov:8116/LBNE35tCon/app/)
#    envSet(DBIWSURLPUT, http://dbdata0vm.fnal.gov:8117/LBNE35tCon/app/)
#    envSet(DBIQEURL, http://dbdata0vm.fnal.gov:8122/QE/dune35t/prod/app/SQ/)
#    envSet(DBIHOST, ifdbprod.fnal.gov)
#    envSet(DBINAME, dune35t_prod)
#    envSet(DBIPORT, 5442)
#    envSet(DBIUSER, dune_reader)
#    envSet(DBIPWDFILE, ~jpaley/dune/db/proddbpwd)
    envSet(DBIQEURL, http://dbdata0vm.fnal.gov:9090/QE/dune)
    envSet(DBIUSER, pdunesp_reader)
    envSet(DBIHOST, ifdbprod.fnal.gov)
    envSet(DBIWSURL, http://dbdata0vm.fnal.gov:9090/dune_con_prod/app/)
    envSet(DBINAME, pdunesp_prod)
    envSet(DBIWSURLPUT, http://dbdata0vm.fnal.gov:9090/dune_con_prod/app/)
    envSet(DBIPORT, 5451)
    envSet(DBIWSURLINT, http://dbdata0vm.fnal.gov:9090/dune_con_prod/app/)
table_fragment_end


# With "product  version" table below, we now define depdendencies

# Add the dependent product and version

product          version
larsoft          v08_35_00
artdaq_core	 v3_05_06
duneutil         v08_35_00	-	optional
lbne_raw_data 	 v1_04_40
dune_pardata	 v01_52_00
genie_xsec       v3_00_04a       -       optional
genie_phyopt     v3_00_04
cetbuildtools	 v7_14_00	-	only_for_build
dune_raw_data    v1_17_39
#caffe            DISCONTINUED   -       optional
nusystematics    v00_06_03
systematicstools v00_04_02
dune_oslibs      v1_0_0         -       optional
end_product_list


# We now define allowed qualifiers and the corresponding qualifiers for the depdencies.
# Make a table by adding columns before "notes".
# e15  - with gcc 6.4.0 and -std=c++14
qualifier	larsoft		duneutil	artdaq_core	 lbne_raw_data	dune_pardata    genie_xsec              genie_phyopt     dune_raw_data	        nusystematics       systematicstools    dune_oslibs  notes
c2:py3:debug	c2:py3:debug	c2:py3:debug	c2:py3:s92:debug     c2:py3:nu:s92:debug	-nq-    G1810a0211a:k250:e1000  dkcharmtau       c2:py3:nu:s92:debug         c2:py3:debug            c2:py3:debug             -nq-
c2:py3:prof	c2:py3:prof		c2:py3:prof		c2:py3:s92:prof	 c2:py3:nu:s92:prof		-nq-    G1810a0211a:k250:e1000  dkcharmtau       c2:py3:nu:s92:prof          c2:py3:prof             c2:py3:prof              -nq-
e17:py3:debug	e17:py3:debug	e17:py3:debug	e17:py3:s92:debug    e17:py3:nu:s92:debug	-nq-    G1810a0211a:k250:e1000  dkcharmtau       e17:py3:nu:s92:debug        e17:py3:debug           e17:py3:debug            -nq-
e17:py3:prof	e17:py3:prof	e17:py3:prof	e17:py3:s92:prof	 e17:py3:nu:s92:prof	-nq-    G1810a0211a:k250:e1000  dkcharmtau       e17:py3:nu:s92:prof         e17:py3:prof            e17:py3:prof             -nq-
c2:debug	c2:debug	c2:debug	c2:s92:debug     c2:nu:s92:debug	-nq-    G1810a0211a:k250:e1000  dkcharmtau       c2:nu:s92:debug         c2:debug            c2:debug             -nq-
c2:prof		c2:prof		c2:prof		c2:s92:prof	 c2:nu:s92:prof		-nq-    G1810a0211a:k250:e1000  dkcharmtau       c2:nu:s92:prof          c2:prof             c2:prof              -nq-
e17:debug	e17:debug	e17:debug	e17:s92:debug    e17:nu:s92:debug	-nq-    G1810a0211a:k250:e1000  dkcharmtau       e17:nu:s92:debug        e17:debug           e17:debug            -nq-
e17:prof	e17:prof	e17:prof	e17:s92:prof	 e17:nu:s92:prof	-nq-    G1810a0211a:k250:e1000  dkcharmtau       e17:nu:s92:prof         e17:prof            e17:prof             -nq-
end_qualifier_list

# Preserve tabs and formatting in emacs and vi / vim:

### Local Variables:
### tab-width: 8
### End:
